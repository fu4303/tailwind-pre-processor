/**
 * [Utility First Class (Less Version)]
 * Utils: class-generator
 * Author: xiaoluoboding
 * Code for fun!
 */

/**
 * [@params]: theme pairs
 * [@params]: preset pairs
 * [@params]: variants eg: responsive
 * [@params]: mode default/variant/both. default is both
 */

.class-generator (@themePairs, @presetPairs, @variantsList, @mode: 'both') {
  // generate responsive class
  .responsive-generator (@screens, @i: 1) when (@i =< length(@screens)) {
    // extract screen pair
    @screenSize: e(extract(extract(@screens, @i), 1));
    @screenValue: e(extract(extract(@screens, @i), 2));

    @media (min-width: @screenValue) {
      .loop-themes(@themePairs, @presetPairs, @screenSize);
    }

    .responsive-generator(@screens, @i + 1);
  }

  // loop theme property
  .loop-themes (@themePairs, @presetPairs, @variant, @i: 1) when (@i =< length(@themePairs)) {
    // extract theme pair
    @key: extract(extract(@themePairs, @i), 1);
    // input: '1/2' | output: 1\/2
    @modifier: if(isnumber(@key), e(@key), e(replace(~"@{key}", '\/', '\/')));
    @originValue: extract(extract(@themePairs, @i), 2);
    @value: e(@originValue);

    // extract perset pair
    @prefix: e(extract(@presetPairs, 1));
    @property: e(extract(@presetPairs, 2));

    // eg. @prefix = none ? flex : gap-4
    // eg. @modifier = default ? shadow : shadow-sm
    // eg. isnumber(@key) and (@key < 0) ? -rotate-180 : rotate-180
    @selector: if((@prefix = none),
      @modifier,
      if((@key = default),
        @prefix,
        if(isnumber(@key) and (@key < 0),
          ~"-@{prefix}@{modifier}",
          ~"@{prefix}-@{modifier}"
        )));

    @variantSelector: if((@variant = default),
      @selector,
      if((@variant = 'hover') or (@variant = 'focus'),
        ~"@{variant}\:@{selector}:@{variant}",
        ~"@{variant}\:@{selector}"));

    .@{variantSelector} {
      @{property}: @value;
    }

    .loop-themes(@themePairs, @presetPairs, @variant, (@i + 1));
  }

  // loop variants
  .loop-variants (@list, @j: 1) when (@j =< length(@list)) {
    @variant: extract(@list, @j);

    & when (@variant = 'responsive') {
      // loop responsive variants
      .responsive-generator(@theme[@screens]);
    }

    & when not (@variant = 'hover') {
      .loop-themes(@themePairs, @presetPairs, @variant);
    }

    & when (@variant = 'focus') {
      .loop-themes(@themePairs, @presetPairs, @variant);
    }

    .loop-variants(@list, @j + 1);
  }

  & when (@mode = 'default') {
    .loop-themes(@themePairs, @presetPairs, default);
  }

  & when (@mode = 'variant') {
    .loop-variants(@variantsList);
  }

  & when (@mode = 'both') {
    .loop-themes(@themePairs, @presetPairs, default);

    .loop-variants(@variantsList);
  }
}
