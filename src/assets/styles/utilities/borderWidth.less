/**
 * [Utility First Class (Less Version)]
 * property: border-width
 * Author: xiaoluoboding
 * Code for fun!
 */

@borderWidth:
  default 1px,
  0 0,
  2 2px,
  4 4px,
  8 8px
;

.defaultBorderWidth (@key, @value) when (@key =default) {
  .border {
    border-width: @value;
  }

  .border-t {
    border-top-width: @value;
  }

  .border-r {
    border-right-width: @value;
  }

  .border-b {
    border-bottom-width: @value;
  }

  .border-l {
    border-left-width: @value;
  }
}

.modifierBorderWidth (@key, @value) when not (@key = default) {
  .border-@{key} {
    border-width: @value;
  }

  .border-t-@{key} {
    border-top-width: @value;
  }

  .border-r-@{key} {
    border-right-width: @value;
  }

  .border-b-@{key} {
    border-bottom-width: @value;
  }

  .border-l-@{key} {
    border-left-width: @value;
  }
}

.generateBorderWidth(@array, @i: 1) when (@i <= length(@array)) {
  @pair: extract(@array, @i);
  @key: extract(@pair, 1);
  @value: extract(@pair, 2);

  // If this is the first iteration - create primary color without a suffix
  // & when (@i = 1) {
  //   .@{selector} {
  //     @{property}: extract(@color-list, 6);
  //   }
  // }

  .defaultBorderWidth(@key, @value);

  .modifierBorderWidth(@key, @value);

  .generateBorderWidth(@array, (@i + 1));
}

.generateBorderWidth(@borderWidth);
