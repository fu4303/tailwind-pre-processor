/**
 * [Utility First Class (Less Version)]
 * property: margin
 * Author: xiaoluoboding
 * Code for fun!
 */

.margin(@property, @value) {
  // m-*
  .m-@{property} {
    margin: @value;
  }
  // mx-*
  .mx-@{property} {
    margin-left: @value;
    margin-right: @value;
  }
  // my-*
  .my-@{property} {
    margin-top: @value;
    margin-bottom: @value;
  }
  // mt-*
  .mt-@{property} {
    margin-top: @value;
  }
  // mr-*
  .mr-@{property} {
    margin-right: @value;
  }
  // mb-*
  .mb-@{property} {
    margin-bottom: @value;
  }
  // ml-*
  .ml-@{property} {
    margin-left: @value;
  }
}

.negativeMargin(@property, @value) {
  // -m-*
  .-m-@{property} {
    margin: @value;
  }
  // -mx-*
  .-mx-@{property} {
    margin-left: @value;
    margin-right: @value;
  }
  // -my-*
  .-my-@{property} {
    margin-top: @value;
    margin-bottom: @value;
  }
  // -mt-*
  .-mt-@{property} {
    margin-top: @value;
  }
  // -mr-*
  .-mr-@{property} {
    margin-right: @value;
  }
  // -mb-*
  .-mb-@{property} {
    margin-bottom: @value;
  }
  // -ml-*
  .-ml-@{property} {
    margin-left: @value;
  }
}

.generateMargin(@array, @i: 1) when (@i =< length(@array)) {
  @pair: extract(@array, @i);
  @key: extract(@pair, 1);
  @value: extract(@pair, 2);

  @property: e(@key);

  .margin(@property, @value);

  .negativeMargin(@property, @value);
  
  .generateMargin(@array, (@i + 1));
}

.margin(auto, auto);
.generateMargin(@space);


