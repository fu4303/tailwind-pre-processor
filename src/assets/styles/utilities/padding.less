/**
 * [Utility First Class (Less Version)]
 * Property: padding
 * Author: xiaoluoboding
 * Code for fun!
 */

.padding-props(@list, @value, @p: 2) when (@p =< length(@list)) {
  @props: e(extract(@list, @p));

  .padding-props(@list, @value, @p + 1);

  @{props}: @value;
}

.padding-responsive(@screens, @i: 1) when (@i =< length(@screens)) {
  // extract screen pair
  @screenSize: e(extract(extract(@screens, @i), 1));
  @screenValue: e(extract(extract(@screens, @i), 2));

  @media (min-width: @screenValue) {
    .generate-padding(@theme[@spacing], @screenSize);
  }

  .padding-responsive(@screens, @i + 1);
}

.padding-preset(@modifier, @value, @variant) {
  .loop-presets(@array, @i: 1) when (@i =< length(@array)) {

    @prefix: extract(extract(@array, @i), 1);

    @presetList: extract(@array, @i);

    @selector: ~"@{prefix}-@{modifier}";

    @variantSelector: if((@variant = default),
      @selector,
      if((@variant = 'hover') or (@variant = 'focus'),
        ~"@{variant}\:@{selector}:@{variant}",
        ~"@{variant}\:@{selector}"));

    .@{variantSelector} {
      .padding-props(@presetList, @value);
    }

    .loop-presets(@array, @i + 1);
  }

  .loop-presets(@preset[@padding]);
}

// generate particular property
.generate-padding(@array, @variant, @i: 1) when (@i =< length(@array)) {
  @pair: extract(@array, @i);
  @modifier: e(extract(@pair, 1));
  @value: e(extract(@pair, 2));

  .padding-preset(@modifier, @value, @variant);

  .generate-padding(@array, @variant, (@i + 1));
}

// loop variants
.padding-variants(@list, @j: 1) when (@j =< length(@list)) {
  @variant: extract(@list, @j);

  & when (@variant = 'responsive') {
    // loop responsive presets
    .padding-responsive(@theme[@screens]);
  }

  & when (@variant = 'hover') {
    .generate-padding(@theme[@spacing], @variant);
  }

  & when (@variant = 'focus') {
    .generate-padding(@theme[@spacing], @variant);
  }

  .padding-variants(@list, @j + 1);
}

.generate-padding(@theme[@spacing], default);

.padding-variants(@variants[@padding]);
