/**
 * [Utility First Class (Less Version)]
 * Property: translate
 * Author: xiaoluoboding
 * Code for fun!
 */

@translate:
  '-full' '-100%',
  '-1/2' '-50%',
  '1/2' '50%',
  full '100%'
;

.translate(@array, @i: 1, @property: translate) when (@i <= length(@array)) {
  @pair: extract(@array, @i);
  @key: extract(@pair, 1);
  @value: extract(@pair, 2);

  @modifier: e(replace(@key, '\/', '\/'));

  & when(@i <= 2) {
    .-transition-x@{modifier} {
      @{property}: e(@value);
    }
    .-transition-y@{modifier} {
      @{property}: e(@value);
    }
  }

  & when (@i > 2) {
    .transition-x-@{modifier} {
      @{property}: e(@value);
    }
    .transition-y-@{modifier} {
      @{property}: e(@value);
    }
  }
  
  .translate(@array, (@i + 1));
}

.translateSpace(@array, @i: 1, @property: translate) when (@i <= length(@array)) {
  @pair: extract(@array, @i);
  @key: extract(@pair, 1);
  @value: extract(@pair, 2);

  @modifier: e(replace(@key, '\/', '\/'));

  .-transition-x-@{modifier} {
    @{property}: 0 - @value;
  }

  .-transition-y-@{modifier} {
    @{property}: 0 - @value;
  }

  .transition-x-@{modifier} {
    @{property}: @value;
  }

  .transition-y-@{modifier} {
    @{property}: @value;
  }

  .translateSpace(@array, (@i + 1));
}

.translate(@translate);
.translateSpace(@theme[@spacing]);
